{"version":3,"sources":["shared/SmallSpinner.js","shared/PageTitle.js","StockPage/StockPage.module.css","StockPage/StockChart.js","StockPage/RelevantPanel.js","StockPage/StockPage.js"],"names":["smallSpinner","react_default","a","createElement","className","styles","pageTitle","props","logo","name","link","history","exchange","symbol","favorite","onFav","titleEl","Link","to","concat","style","cursor","color","marginLeft","display","src","height","alt","maxWidth","SmallSpinner","onClick","e","type","push","goBack","defaultProps","withRouter","module","exports","container","spinner-container","charttime-container","charttime-button","charttime-button-active","book-info","relevant","relevant-inner","relavent-item","relavent-item-row","relavent-item-title","relavent-item-info","title-bar","stockChart","_ref","data","graphSizeX","window","innerWidth","role","position","pointerEvents","width","viewBox","victory_chart","theme","VictoryTheme","material","standalone","parent","domainPadding","y","padding","top","right","bottom","left","victory_axis","tickValues","tickFormat","fixLabelOverlap","axis","stroke","tickLabels","fill","dependentAxis","x","victory_line","labels","relevantPanel","change","close","onSelect","shortCompanyName","priceChange","toFixed","length","slice","key","title","onDragStart","preventDefault","StockPage","state","book","companyName","primaryExchange","chart","chartTime","onRelevantSelect","_this","setState","scrollTo","updateChart","updateBook","cmp","fetch","then","res","json","symbols","join","response","endJson","relevantCompanies","Object","keys","forEach","tempCompany","objectSpread","quote","url","catch","time","arguments","undefined","timeNum","indexOf","onSelectCharttime","location","this","URLSearchParams","search","get","_this2","_this$state","_this$props","favorites","onFavorite","currency","currencyFormat","charttimeButtonElements","map","val","ind","bookInfoElements","newBook","latestPrice","changePercent","high","week52High","low","week52Low","marketCap","peRatio","tempName","replace","labelName","charAt","toUpperCase","formatedNumber","Fragment","chartEl","Spinner","StockChart","PageTitle","includes","sector","react_draggable_default","defaultPosition","bounds","RelevantPanel","Component"],"mappings":"gJAWeA,EAPM,kBACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,eACrBJ,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,cCAEG,EAAY,SAACC,GAAU,IACnBC,EAAiED,EAAjEC,KAAMC,EAA2DF,EAA3DE,KAAMC,EAAqDH,EAArDG,KAAMC,EAA+CJ,EAA/CI,QAASC,EAAsCL,EAAtCK,SAAUC,EAA4BN,EAA5BM,OAAQC,EAAoBP,EAApBO,SAAUC,EAAUR,EAAVQ,MAU3DC,EAAUf,EAAAC,EAAAC,cAAA,UAAKM,GAiBnB,OAhBIC,IACFM,EACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAE,gBAAAC,OAAkBZ,EAAMM,QAAUO,MAAO,CAAEC,OAAQ,YACxDZ,EACAA,EACCR,EAAAC,EAAAC,cAAA,KACEC,UAAU,iBACVgB,MAAO,CAAEE,MAAO,OAAQC,WAAY,KAFtC,QAME,OAMRtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,cACrBJ,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAEI,QAAS,SACpBhB,EACCP,EAAAC,EAAAC,cAAA,OACEsB,IAAKjB,EACLkB,OAAQ,GACRC,IAAG,GAAAR,OAAKV,EAAL,WACHW,MAAO,CAAEQ,SAAU,WAGrB3B,EAAAC,EAAAC,cAAC0B,EAAD,MAEF5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAEI,QAAS,SACpBR,EACAP,EACCR,EAAAC,EAAAC,cAAA,UACE2B,QAAS,SAACC,GAAD,OAAOhB,EAAMgB,EAAGlB,IACzBmB,KAAK,SACL5B,UAAWC,IAAO,oBAEjBS,EACCb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBgB,MAAO,CAAEE,MAAO,QAA9C,YAIArB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,oBAGF,MAENH,EAAAC,EAAAC,cAAA,YAAOU,EAAM,GAAAM,OAAMP,EAAN,MAAAO,OAAmBN,GAAW,QAG/CZ,EAAAC,EAAAC,cAAA,UAAQ2B,QA5DQ,WACdpB,EACFC,EAAQsB,KAAK,WAEbtB,EAAQuB,UAwDsBF,KAAK,SAAS5B,UAAWC,IAAO,gBAC5DJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,iBAuBRE,EAAU6B,aAAe,CAAEzB,MAAM,GAElB0B,gBAAW9B,wBC/F1B+B,EAAAC,QAAA,CAAkBC,UAAA,6BAAAC,oBAAA,qCAAAC,sBAAA,uCAAAC,mBAAA,oCAAAC,0BAAA,2CAAAC,YAAA,6BAAAC,SAAA,4BAAAC,iBAAA,kCAAAC,gBAAA,iCAAAC,oBAAA,qCAAAC,sBAAA,uCAAAC,qBAAA,sCAAAC,YAAA,0MCgEHC,EA7DI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACdC,EAAaC,OAAOC,WAAa,IAAM,IAAM,IAInD,OACExD,EAAAC,EAAAC,cAAA,OACEuD,KAAK,MACLtC,MAAO,CACLuC,SAAU,SACVC,cAAe,OACfC,MAAO,OACPnC,OAAQ,QAEVoC,QAAO,OAAA3C,OAASoC,EAAT,KAAApC,OAXQ,MAaflB,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACErC,OAda,IAebmC,MAAON,EACPS,MAAOC,IAAaC,SACpBC,YAAY,EACZ/C,MAAO,CAAEgD,OAAQ,CAAET,SAAU,WAC7BU,cAAe,CAAEC,EAAG,CAAC,GAAI,KACzBC,QAAS,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KAEjD1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAY,CAAC,EAAG,EAAG,EAAG,GACtBC,WAAY,SAACR,GAAD,SAAAnD,OAAUmD,IACtBS,iBAAe,EACf3D,MAAO,CACL4D,KAAM,CAAEC,OAAQ,WAChBC,WAAY,CAAEC,KAAM,cAGxBlF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEQ,eAAa,EACbN,WAAY,SAACO,GAAD,SAAAlE,OAAUkE,IACtBjE,MAAO,CACL4D,KAAM,CAAEC,OAAQ,WAChBC,WAAY,CAAEC,KAAM,cAGxBlF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEhC,KAAMA,EACN+B,EAAE,QACFf,EAAE,QACFlD,MAAO,CAAEkC,KAAM,CAAE2B,OAAQ,WAAaM,OAAQ,CAAE/D,QAAS,iDCepDgE,EA3DO,SAAAnC,GAA+C,IAA5C5C,EAA4C4C,EAA5C5C,KAAMgF,EAAsCpC,EAAtCoC,OAAQ5E,EAA8BwC,EAA9BxC,OAAQ6E,EAAsBrC,EAAtBqC,MAAOC,EAAetC,EAAfsC,SAChDC,EAAmBnF,EACjBoF,EAAW,GAAA1E,OAAMsE,EAAS,EAAI,IAAM,IAAzBtE,QACN,IAATsE,GACAK,QAAQ,GAFO,KAQjB,OAJIF,EAAiBG,OAAS,KAC5BH,EAAgB,GAAAzE,OAAMyE,EAAiBI,MAAM,EAAG,IAAhC,QAIhB/F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,iBAAkB4F,IAAKpF,GAC5CZ,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAe,OAAKd,IAAO,qBAAZ,KAAAc,OACPd,IAAO,yBAGTJ,EAAAC,EAAAC,cAAA,MACE+F,MACoD,MAAlDN,EAAiBA,EAAiBG,OAAS,GACvCtF,EACA,MAGLmF,GAEH3F,EAAAC,EAAAC,cAAA,YAAOU,IAETZ,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAe,OAAKd,IAAO,qBAAZ,KAAAc,OACPd,IAAO,wBAGTJ,EAAAC,EAAAC,cAAA,YAAOuF,GACPzF,EAAAC,EAAAC,cAAA,QACEiB,MAAO,CAAEE,MAAOmE,EAAS,EAAI,QAAU,QAEtCI,GAEH5F,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,GAAE,cAAAC,OAAgBN,GAClBsF,YAAa,SAACpE,GAAD,OAAOA,EAAEqE,kBACtBtE,QAAS,kBAAM6D,EAAS9E,KAH1B,cCnCFwF,6MACJC,MAAQ,CACNC,KAAM,CACJ1F,OAAQ,GACR2F,YAAa,GACbC,gBAAiB,IAEnBC,MAAO,GACPC,UAAW,EACX9D,SAAU,GACVrC,KAAM,MAURoG,iBAAmB,SAAC/F,GAClBgG,EAAKC,SAAS,CACZJ,MAAO,GACPH,KAAM,CACJ1F,OAAQ,GACR2F,YAAa,GACbC,gBAAiB,IAEnB5D,SAAU,GACVrC,KAAM,KAERgD,OAAOuD,SAAS,EAAG,GAEnBF,EAAKG,YAAYnG,GACjBgG,EAAKI,WAAWpG,MAGlBoG,WAAa,SAACC,GACZC,MAAK,wCAAAhG,OACqC+F,EADrC,qCAGFE,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACE,GACLH,MAAK,yEAAAhG,OACsEmG,EAAKzE,SAAS0E,QAAQC,KAC7F,KAFC,mDAKFJ,KAAK,SAACK,GAAD,OAAcA,EAASH,SAC5BF,KAAK,SAACM,GACL,IAAMC,EAAoB,GAE1BC,OAAOC,KAAKH,GAASI,QAAQ,SAAC7B,GAC5B,IAAM8B,EAAWH,OAAAI,EAAA,EAAAJ,CAAA,GAAQF,EAAQzB,GAAKgC,OACtCF,EAAYlH,OAASoF,EACrB0B,EAAkB1F,KAAK8F,KAGzBlB,EAAKC,SAAS,CACZP,KAAMe,EAAKW,MACXpF,SAAU8E,EACVnH,KAAM8G,EAAK9G,KAAK0H,QAGnBC,MAAM,gBAEVA,MAAM,iBAGXnB,YAAc,SAACnG,GAAwB,IAAhBuH,EAAgBC,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAC5BlB,MAAK,wCAAAhG,OACqCN,EADrC,WAAAM,OACqDiH,EADrD,6BAGFhB,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACE,GACL,IAAMiB,EAAU,CAAC,KAAM,KAAM,KAAM,KAAM,MAAMC,QAAQJ,GACvDvB,EAAKC,SAAS,CACZJ,MAAOY,EACPX,UAAW4B,MAGdJ,MAAM,iBAGXM,kBAAoB,SAACL,GAAS,IACpB7B,EAASM,EAAKP,MAAdC,KACRM,EAAKC,SAAS,CAAEJ,MAAO,KACvBG,EAAKG,YAAYT,EAAK1F,OAAQuH,uFA1EZ,IACVM,EAAaC,KAAKpI,MAAlBmI,SACFxB,EAAM,IAAI0B,gBAAgBF,EAASG,OAAO7C,MAAM,IAAI8C,IAAI,OAC9DH,KAAK1B,WAAWC,GAChByB,KAAK3B,YAAYE,oCAyEV,IAqBY7D,EArBZ0F,EAAAJ,KAAAK,EAC4CL,KAAKrC,MAAhDI,EADDsC,EACCtC,MAAOlG,EADRwI,EACQxI,KAAM+F,EADdyC,EACczC,KAAMI,EADpBqC,EACoBrC,UAAW9D,EAD/BmG,EAC+BnG,SAD/BoG,EAEqDN,KAAKpI,MAAzD2I,EAFDD,EAECC,UAAWC,EAFZF,EAEYE,WAAYC,EAFxBH,EAEwBG,SAAUC,EAFlCJ,EAEkCI,eAEnCC,EAA0B,CAAC,KAAM,KAAM,KAAM,KAAM,MAAMC,IAC7D,SAACC,EAAKC,GAAN,OACExJ,EAAAC,EAAAC,cAAA,UACE6B,KAAK,SACL5B,UAAS,GAAAe,OAAKd,IAAO,oBAAZ,KAAAc,OACPwF,IAAc8C,EAAMpJ,IAAO,2BAA6B,MAE1DyB,QAAS,kBAAMiH,EAAKN,kBAAkBe,IACtCvD,IAAKuD,GAEJA,KAKHE,EAAmB,KACvB,GAAI9B,OAAOC,KAAKtB,GAAMR,OAAS,EAAG,CAChC,IAAM4D,EAWC,CACLjE,OAZerC,EAsBbkD,GArBFb,MAYAkE,YAbevG,EAEfuG,YAYAC,cAdexG,EAGfwG,cAYApE,OAfepC,EAIfoC,OAYAqE,KAhBezG,EAKfyG,KAYAC,WAjBe1G,EAMf0G,WAYAC,IAlBe3G,EAOf2G,IAYAC,UAnBe5G,EAQf4G,UAYAC,UApBe7G,EASf6G,UAYAC,QArBe9G,EAUf8G,SAcFT,EAAmB9B,OAAOC,KAAK8B,GAASJ,IAAI,SAACtD,GAC3C,IAAMmE,EAAWnE,EAAIoE,QAAQ,WAAY,OACnCC,EAAYF,EAASG,OAAO,GAAGC,cAAgBJ,EAASpE,MAAM,GAC9DyE,EAAyB,kBAARxE,EAAA,GAAA9E,OAChBwI,EAAQ1D,GAAO,EAAI,IAAM,IADT9E,QAC8B,IAAfwI,EAAQ1D,IAAYH,QAAQ,GAD3C,QAAA3E,OAEhBkI,EAAeM,EAAQ1D,IAAQ,GAFf,KAAA9E,OAEqBiI,GAC5C,OACEnJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMwK,SAAP,CAAgBzE,IAAKA,GACnBhG,EAAAC,EAAAC,cAAA,eAAAgB,OACMmJ,EADN,MAGArK,EAAAC,EAAAC,cAAA,YAAOsK,MAMf,IAAIE,EACF1K,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,sBACrBJ,EAAAC,EAAAC,cAACyK,EAAA,EAAD,OAeJ,OAZIlE,EAAMX,OAAS,IACjB4E,EACE1K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,wBACpBiJ,GAEHrJ,EAAAC,EAAAC,cAAC0K,EAAD,CAAYvH,KAAMoD,IAClBzG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,cAAeqJ,KAM1CzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOkC,WACrBtC,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEtK,KAAMA,EACNC,KAAM8F,EAAKC,YACX5F,SAAU2F,EAAKE,gBACf5F,OAAQ0F,EAAK1F,OACbC,SAAUoI,EAAU6B,SAASxE,EAAK1F,QAClCE,MAAOoI,EACPzI,MAAI,IAENT,EAAAC,EAAAC,cAAA,WACCwK,EACD1K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACGoG,EAAKyE,OAAS/K,EAAAC,EAAAC,cAAA,oBAAAgB,OAAeoF,EAAKyE,SAAgB/K,EAAAC,EAAAC,cAAA,sBACnDF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOwC,UACrB5C,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CACE8E,KAAK,IACLkG,gBAAiB,CAAE7F,EAAG,EAAGf,EAAG,GAC5B6G,OAAQ,CAAExG,MAAkC,KAA3B9B,EAASkD,OAAS,MAActB,MAAO,IAExDxE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,mBACpBwC,EAAS0G,IAAI,SAACC,GAAD,OACZvJ,EAAAC,EAAAC,cAACiL,EAAD,CACE3K,KAAM+I,EAAIhD,YACV3F,OAAQ2I,EAAI3I,OACZ6E,MAAO2D,EAAeG,EAAI9D,OAC1BD,OAAQ+D,EAAIK,cACZlE,SAAUoD,EAAKnC,iBACfX,IAAG,OAAA9E,OAASqI,EAAI3I,wBAvMZwK,aA2NThF","file":"static/js/2.645dccc4.chunk.js","sourcesContent":["import React from 'react'\n\nimport styles from './shared.module.css'\n\nconst smallSpinner = () => (\n  <div className={styles['lds-ripple']}>\n    <div />\n    <div />\n  </div>\n)\n\nexport default smallSpinner\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter, Link } from 'react-router-dom'\n\nimport SmallSpinner from './SmallSpinner'\nimport styles from './shared.module.css'\n\nconst pageTitle = (props) => {\n  const { logo, name, link, history, exchange, symbol, favorite, onFav } = props\n\n  const onBackClick = () => {\n    if (link) {\n      history.push('/market')\n    } else {\n      history.goBack()\n    }\n  }\n\n  let titleEl = <h6>{name}</h6>\n  if (link) {\n    titleEl = (\n      <Link to={`/company?cmp=${props.symbol}`} style={{ cursor: 'pointer' }}>\n        {name}\n        {name ? (\n          <i\n            className=\"material-icons\"\n            style={{ color: 'gray', marginLeft: 10 }}\n          >\n            info\n          </i>\n        ) : null}\n      </Link>\n    )\n  }\n\n  return (\n    <div className={styles['title-bar']}>\n      <div style={{ display: 'flex' }}>\n        {logo ? (\n          <img\n            src={logo}\n            height={56}\n            alt={`${name}'s logo`}\n            style={{ maxWidth: '100px' }}\n          />\n        ) : (\n          <SmallSpinner />\n        )}\n        <div>\n          <div style={{ display: 'flex' }}>\n            {titleEl}\n            {name ? (\n              <button\n                onClick={(e) => onFav(e, symbol)}\n                type=\"button\"\n                className={styles['favorite-button']}\n              >\n                {favorite ? (\n                  <i className=\"material-icons\" style={{ color: 'red' }}>\n                    favorite\n                  </i>\n                ) : (\n                  <i className=\"material-icons\">favorite_border</i>\n                )}\n              </button>\n            ) : null}\n          </div>\n          <span>{symbol ? `${exchange}: ${symbol}` : null}</span>\n        </div>\n      </div>\n      <button onClick={onBackClick} type=\"button\" className={styles['back-button']}>\n        <i className=\"material-icons md-48\">arrow_back</i>\n      </button>\n    </div>\n  )\n}\n\npageTitle.propTypes = {\n  logo: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  link: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  symbol: PropTypes.string.isRequired,\n  exchange: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n  favorite: PropTypes.bool.isRequired,\n  onFav: PropTypes.func.isRequired,\n}\n\npageTitle.defaultProps = { link: false }\n\nexport default withRouter(pageTitle)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StockPage_container__1Cm2l\",\"spinner-container\":\"StockPage_spinner-container__uO_1o\",\"charttime-container\":\"StockPage_charttime-container__11Ckt\",\"charttime-button\":\"StockPage_charttime-button__3iRCK\",\"charttime-button-active\":\"StockPage_charttime-button-active__1ViLm\",\"book-info\":\"StockPage_book-info__3jJzi\",\"relevant\":\"StockPage_relevant__FY3PQ\",\"relevant-inner\":\"StockPage_relevant-inner__2cTpH\",\"relavent-item\":\"StockPage_relavent-item__7VFgl\",\"relavent-item-row\":\"StockPage_relavent-item-row__2I31r\",\"relavent-item-title\":\"StockPage_relavent-item-title__13iMi\",\"relavent-item-info\":\"StockPage_relavent-item-info__24c28\",\"title-bar\":\"StockPage_title-bar__3v5kB\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { VictoryLine, VictoryChart, VictoryAxis, VictoryTheme } from 'victory'\n\nconst stockChart = ({ data }) => {\n  const graphSizeX = window.innerWidth < 620 ? 350 : 500\n  // const graphSizeY = window.innerWidth < 620 ? 250 : 250\n  const graphSizeY = 250\n\n  return (\n    <svg\n      role=\"img\"\n      style={{\n        position: 'static',\n        pointerEvents: 'none',\n        width: '100%',\n        height: '100%',\n      }}\n      viewBox={`0 0 ${graphSizeX} ${graphSizeY}`}\n    >\n      <VictoryChart\n        height={graphSizeY}\n        width={graphSizeX}\n        theme={VictoryTheme.material}\n        standalone={false}\n        style={{ parent: { position: 'static' } }}\n        domainPadding={{ y: [20, 20] }}\n        padding={{ top: 10, right: 40, bottom: 30, left: 50 }}\n      >\n        <VictoryAxis\n          tickValues={[1, 2, 3, 4]}\n          tickFormat={(y) => `${y}`}\n          fixLabelOverlap\n          style={{\n            axis: { stroke: '#344955' },\n            tickLabels: { fill: '#344955' },\n          }}\n        />\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(x) => `${x}`}\n          style={{\n            axis: { stroke: '#344955' },\n            tickLabels: { fill: '#344955' },\n          }}\n        />\n        <VictoryLine\n          data={data}\n          x=\"label\"\n          y=\"close\"\n          style={{ data: { stroke: '#344955' }, labels: { display: 'none' } }}\n        />\n      </VictoryChart>\n    </svg>\n  )\n}\n\nstockChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    close: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    date: PropTypes.string,\n  })).isRequired,\n}\n\nexport default stockChart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport styles from './StockPage.module.css'\n\nconst relevantPanel = ({ name, change, symbol, close, onSelect }) => {\n  let shortCompanyName = name\n  const priceChange = `${change > 0 ? '+' : ''}${(\n    change * 100\n  ).toFixed(2)}%`\n\n  if (shortCompanyName.length > 14) {\n    shortCompanyName = `${shortCompanyName.slice(0, 12)}...`\n  }\n\n  return (\n    <div className={styles['relavent-item']} key={symbol}>\n      <div\n        className={`${styles['relavent-item-row']} ${\n          styles['relavent-item-title']\n        }`}\n      >\n        <h6\n          title={\n            shortCompanyName[shortCompanyName.length - 2] === '.'\n              ? name\n              : null\n          }\n        >\n          {shortCompanyName}\n        </h6>\n        <span>{symbol}</span>\n      </div>\n      <div\n        className={`${styles['relavent-item-row']} ${\n          styles['relavent-item-info']\n        }`}\n      >\n        <span>{close}</span>\n        <span\n          style={{ color: change > 0 ? 'green' : 'red' }}\n        >\n          {priceChange}\n        </span>\n        <Link\n          to={`/stock?cmp=${symbol}`}\n          onDragStart={(e) => e.preventDefault()}\n          onClick={() => onSelect(symbol)}\n        >\n          More...\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nrelevantPanel.propTypes = {\n  name: PropTypes.string.isRequired,\n  change: PropTypes.number.isRequired,\n  symbol: PropTypes.string.isRequired,\n  close: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n}\n\nexport default relevantPanel\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Draggable from 'react-draggable'\n\nimport PageTitle from '../shared/PageTitle'\nimport StockChart from './StockChart'\nimport Spinner from '../shared/Spinner'\nimport RelevantPanel from './RelevantPanel'\nimport styles from './StockPage.module.css'\n\nclass StockPage extends Component {\n  state = {\n    book: {\n      symbol: '',\n      companyName: '',\n      primaryExchange: '',\n    },\n    chart: [],\n    chartTime: 0,\n    relevant: [],\n    logo: '',\n  }\n\n  componentDidMount() {\n    const { location } = this.props\n    const cmp = new URLSearchParams(location.search.slice(1)).get('cmp')\n    this.updateBook(cmp)\n    this.updateChart(cmp)\n  }\n\n  onRelevantSelect = (symbol) => {\n    this.setState({\n      chart: [],\n      book: {\n        symbol: '',\n        companyName: '',\n        primaryExchange: '',\n      },\n      relevant: [],\n      logo: '',\n    })\n    window.scrollTo(0, 0)\n\n    this.updateChart(symbol)\n    this.updateBook(symbol)\n  }\n\n  updateBook = (cmp) => {\n    fetch(\n      `https://api.iextrading.com/1.0/stock/${cmp}/batch?types=quote,relevant,logo`,\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        fetch(\n          `https://api.iextrading.com/1.0/stock/market/batch?types=quote&symbols=${json.relevant.symbols.join(\n            ',',\n          )}&filter=companyName,symbol,changePercent,close`,\n        )\n          .then((response) => response.json())\n          .then((endJson) => {\n            const relevantCompanies = []\n\n            Object.keys(endJson).forEach((key) => {\n              const tempCompany = { ...endJson[key].quote }\n              tempCompany.symbol = key\n              relevantCompanies.push(tempCompany)\n            })\n\n            this.setState({\n              book: json.quote,\n              relevant: relevantCompanies,\n              logo: json.logo.url,\n            })\n          })\n          .catch(() => {})\n      })\n      .catch(() => {})\n  }\n\n  updateChart = (symbol, time = '1m') => {\n    fetch(\n      `https://api.iextrading.com/1.0/stock/${symbol}/chart/${time}?filter=date,close,label`,\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        const timeNum = ['1m', '3m', '6m', '1y', '2y'].indexOf(time)\n        this.setState({\n          chart: json,\n          chartTime: timeNum,\n        })\n      })\n      .catch(() => {})\n  }\n\n  onSelectCharttime = (time) => {\n    const { book } = this.state\n    this.setState({ chart: [] })\n    this.updateChart(book.symbol, time)\n  }\n\n  render() {\n    const { chart, logo, book, chartTime, relevant } = this.state\n    const { favorites, onFavorite, currency, currencyFormat } = this.props\n\n    const charttimeButtonElements = ['1m', '3m', '6m', '1y', '2y'].map(\n      (val, ind) => (\n        <button\n          type=\"button\"\n          className={`${styles['charttime-button']} ${\n            chartTime === ind ? styles['charttime-button-active'] : null\n          }`}\n          onClick={() => this.onSelectCharttime(val)}\n          key={val}\n        >\n          {val}\n        </button>\n      ),\n    )\n\n    let bookInfoElements = null\n    if (Object.keys(book).length > 1) {\n      const newBook = (({\n        close,\n        latestPrice,\n        changePercent,\n        change,\n        high,\n        week52High,\n        low,\n        week52Low,\n        marketCap,\n        peRatio,\n      }) => ({\n        close,\n        latestPrice,\n        changePercent,\n        change,\n        high,\n        week52High,\n        low,\n        week52Low,\n        marketCap,\n        peRatio,\n      }))(book)\n\n      bookInfoElements = Object.keys(newBook).map((key) => {\n        const tempName = key.replace(/([A-Z])/g, ' $1')\n        const labelName = tempName.charAt(0).toUpperCase() + tempName.slice(1)\n        const formatedNumber = key === 'changePercent'\n          ? `${newBook[key] > 0 ? '+' : ''}${(newBook[key] * 100).toFixed(2)}%`\n          : `${currencyFormat(newBook[key] || 0)} ${currency}`\n        return (\n          <React.Fragment key={key}>\n            <span>\n              {`${labelName}:`}\n            </span>\n            <span>{formatedNumber}</span>\n          </React.Fragment>\n        )\n      })\n    }\n\n    let chartEl = (\n      <div className={styles['spinner-container']}>\n        <Spinner />\n      </div>\n    )\n    if (chart.length > 0) {\n      chartEl = (\n        <div>\n          <div className={styles['charttime-container']}>\n            {charttimeButtonElements}\n          </div>\n          <StockChart data={chart} />\n          <div className={styles['book-info']}>{bookInfoElements}</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className={styles.container}>\n        <PageTitle\n          logo={logo}\n          name={book.companyName}\n          exchange={book.primaryExchange}\n          symbol={book.symbol}\n          favorite={favorites.includes(book.symbol)}\n          onFav={onFavorite}\n          link\n        />\n        <hr />\n        {chartEl}\n        <hr />\n        <div>\n          {book.sector ? <p>{`Sector: ${book.sector}`}</p> : <p>Relevant:</p>}\n          <div className={styles.relevant}>\n            <Draggable\n              axis=\"x\"\n              defaultPosition={{ x: 0, y: 0 }}\n              bounds={{ left: (relevant.length - 3.48) * -220, right: 0 }}\n            >\n              <div className={styles['relevant-inner']}>\n                {relevant.map((val) => (\n                  <RelevantPanel\n                    name={val.companyName}\n                    symbol={val.symbol}\n                    close={currencyFormat(val.close)}\n                    change={val.changePercent}\n                    onSelect={this.onRelevantSelect}\n                    key={`rel-${val.symbol}`}\n                  />\n                ))}\n              </div>\n            </Draggable>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nStockPage.propTypes = {\n  location: PropTypes.objectOf(PropTypes.string).isRequired,\n  favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onFavorite: PropTypes.func.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencyFormat: PropTypes.func.isRequired,\n}\n\nexport default StockPage\n"],"sourceRoot":""}