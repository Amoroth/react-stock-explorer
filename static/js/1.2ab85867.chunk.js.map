{"version":3,"sources":["Stocks/Stocks.module.css","Stocks/Panel.js","shared/CircularButton.js","Stocks/Stocks.js"],"names":["module","exports","container","markets-container","stocks-container","panel","panel-details","panel-title","panel-upper","panel-favorite","no-favorites","_ref","change","title","short","favorite","onFav","price","history","currency","priceChange","concat","toFixed","stockName","length","slice","openFullPage","e","type","which","push","react_default","a","createElement","className","styles","onClick","role","onKeyPress","tabIndex","style","color","defaultProps","withRouter","circularButton","children","func","Stocks","state","stocks","market","onMarketChange","newMarket","_this","fetch","then","res","json","setState","catch","loadFavorites","favorites","props","newStocks","Object","keys","map","val","quote","_this2","this","_this3","_this$state","_this$props","onFavorite","currencyFormat","stockElements","Spinner","Panel","companyName","symbol","close","changePercent","includes","key","marketButtons","linkname","replace","toLowerCase","CircularButton","React","Component"],"mappings":"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","file":"static/js/1.2ab85867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stocks_container__1IOqm\",\"markets-container\":\"Stocks_markets-container__1bGVF\",\"stocks-container\":\"Stocks_stocks-container__1gy6_\",\"panel\":\"Stocks_panel__3Nsn9\",\"panel-details\":\"Stocks_panel-details__1qic6\",\"panel-title\":\"Stocks_panel-title__1V9s0\",\"panel-upper\":\"Stocks_panel-upper__ZYUNh\",\"panel-favorite\":\"Stocks_panel-favorite__2W3bC\",\"no-favorites\":\"Stocks_no-favorites__jy8R6\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\n\nimport styles from './Stocks.module.css'\n\nconst panel = ({ change, title, short, favorite, onFav, price, history, currency }) => {\n  const priceChange = `${change > 0 ? '+' : ''}${(change * 100).toFixed(2)}%`\n  let stockName = title\n  if (stockName.length > 30) {\n    stockName = `${stockName.slice(0, 28)}...`\n  }\n\n  const openFullPage = (e) => {\n    if ((e.type === 'keypress' && e.which === 13) || e.type === 'click') {\n      history.push(`/stock?cmp=${short}`)\n    }\n  }\n\n  return (\n    <div\n      className={styles.panel}\n      onClick={openFullPage}\n      role=\"button\"\n      onKeyPress={openFullPage}\n      tabIndex={0}\n    >\n      <div className={styles['panel-upper']}>\n        <h6\n          className={styles['panel-title']}\n          title={stockName[stockName.length - 2] === '.' ? title : null}\n        >\n          {stockName}\n        </h6>\n        <button\n          className={styles['panel-favorite']}\n          onClick={(e) => onFav(e, short)}\n          type=\"button\"\n        >\n          {favorite ? (\n            <i className=\"material-icons\" style={{ color: 'red' }}>\n              favorite\n            </i>\n          ) : (\n            <i className=\"material-icons\">favorite_border</i>\n          )}\n        </button>\n      </div>\n      <div className={styles['panel-details']}>\n        <span>{short}</span>\n        <span>{`${price === 'NaN' ? 0 : price} ${currency}`}</span>\n        <span style={{ color: change > 0 ? 'green' : 'red' }}>\n          {priceChange}\n        </span>\n      </div>\n    </div>\n  )\n}\n\npanel.propTypes = {\n  change: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  short: PropTypes.string.isRequired,\n  favorite: PropTypes.bool,\n  onFav: PropTypes.func.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n  price: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n}\n\npanel.defaultProps = { favorite: false }\n\nexport default withRouter(panel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './shared.module.css'\n\nconst circularButton = ({ children, func }) => (\n  <button className={styles['circular-button']} type=\"button\" onClick={func}>\n    {children}\n  </button>\n)\n\ncircularButton.propTypes = {\n  children: PropTypes.string,\n  func: PropTypes.func,\n}\n\ncircularButton.defaultProps = {\n  children: '',\n  func: () => {},\n}\n\nexport default circularButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Panel from './Panel'\nimport CircularButton from '../shared/CircularButton'\nimport Spinner from '../shared/Spinner'\nimport styles from './Stocks.module.css'\n\nclass Stocks extends React.Component {\n  state = {\n    stocks: [],\n    market: 'infocus',\n  }\n\n  componentDidMount() {\n    const { market } = this.state\n\n    fetch(`https://api.iextrading.com/1.0/stock/market/list/${market}`)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({ stocks: json })\n      })\n      .catch(() => {})\n  }\n\n  onMarketChange = (newMarket) => {\n    const { market } = this.state\n    if (market === newMarket) {\n      return\n    }\n    if (newMarket === 'favorites') {\n      this.loadFavorites()\n      return\n    }\n    // filter does not work\n    fetch(`https://api.iextrading.com/1.0/stock/market/list/${newMarket}`)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          stocks: json,\n          market: newMarket,\n        })\n      })\n      .catch(() => {})\n  }\n\n  loadFavorites = () => {\n    const { favorites } = this.props\n    if (favorites.length < 1) {\n      this.setState({\n        stocks: [],\n        market: 'favorites',\n      })\n      return\n    }\n    fetch(`https://api.iextrading.com/1.0/stock/market/batch?types=quote&symbols=${favorites}&filter=companyName,symbol,close,changePercent`)\n      .then((res) => res.json())\n      .then((json) => {\n        const newStocks = Object.keys(json).map((val) => json[val].quote)\n        this.setState({\n          stocks: newStocks,\n          market: 'favorites',\n        })\n      })\n      .catch(() => {})\n  }\n\n  render() {\n    const { stocks, market } = this.state\n    const { favorites, onFavorite, currency, currencyFormat } = this.props\n\n    let stockElements = <Spinner />\n    if (stocks.length > 0) {\n      stockElements = stocks.map((val) => (\n        <Panel\n          title={val.companyName}\n          short={val.symbol}\n          price={currencyFormat(val.close)}\n          currency={currency}\n          change={val.changePercent}\n          favorite={favorites.includes(val.symbol)}\n          key={val.symbol}\n          onFav={onFavorite}\n        />\n      ))\n    } else if (market === 'favorites') {\n      stockElements = <h4 className={styles['no-favorites']}>No Favorites! Add some by pressing the heart button</h4>\n    }\n\n    const markets = ['In Focus', 'Favorites', 'Gainers', 'Losers']\n    const marketButtons = markets.map((val) => {\n      const linkname = val.replace(' ', '').toLowerCase()\n      return (\n        <CircularButton\n          func={() => this.onMarketChange(linkname)}\n          key={linkname}\n        >\n          {val}\n        </CircularButton>\n      )\n    })\n\n    return (\n      <div className={styles.container}>\n        <div className={styles['markets-container']}>\n          {marketButtons}\n        </div>\n        <div className={styles['stocks-container']}>\n          {stockElements}\n        </div>\n      </div>\n    )\n  }\n}\n\nStocks.propTypes = {\n  favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onFavorite: PropTypes.func.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencyFormat: PropTypes.func.isRequired,\n}\n\nexport default Stocks\n"],"sourceRoot":""}